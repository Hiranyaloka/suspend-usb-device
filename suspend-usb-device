#!/bin/bash
#
#  suspend-usb-device: an easy-to-use script to properly put an USB
#  device into suspend mode that can then be unplugged safely
#
#  Copyright (C) 2009, Yan Li <elliot.li.tech@gmail.com>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  To reach the auther, please write an email to the address as stated
#  above.

usage()
{
    cat<<EOF
suspend-usb-device  Copyright (C) 2009  Yan Li <elliot.li.tech@gmail.com>

usage:
$0 dev

sample:
$0 /dev/sde

This program comes with ABSOLUTELY NO WARRANTY.  This is free
software, and you are welcome to redistribute it under certain
conditions; for details please read the licese at the beginning of the
source code file.
EOF
}

set -e

if [ -z $1 ]; then
    usage
    exit 2
fi

# looking for the parent device with name like
# /devices/pci0000:00/0000:00:1d.7/usb5/5-8

DEVICE=$(udevinfo --query=path --name=$1 --attribute-walk | \
    egrep "parent device.*usb[[:digit:]]+/[[:digit:]]+-[[:digit:]]+'" | \
    head -n 1 | cut -d"'" -f2)

if [ -z $DEVICE ]; then
    if [ -z $DEVICE ]; then
        echo "cannot find it's parent USB device, "
        echo "perhaps it's not an USB device?"
        exit 1
    fi
fi

echo 'suspend' > /sys/$DEVICE/power/level
